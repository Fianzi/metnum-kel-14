import numpy as np

def dekomposisi_LU(A):
    n = len(A)
    L = np.eye(n)
    U = np.copy(A)

    for i in range(n):
        for j in range(i+1, n):
            factor = U[j][i] / U[i][i]
            L[j][i] = factor
            U[j] -= factor * U[i]

    return L, U

def substitusi_maju(L, b):
    n = len(L)
    y = np.zeros(n)

    for i in range(n):
        y[i] = b[i] - np.dot(L[i][:i], y[:i])

    return y

def substitusi_mundur(U, y):
    n = len(U)
    x = np.zeros(n)

    for i in range(n-1, -1, -1):
        x[i] = (y[i] - np.dot(U[i][i+1:], x[i+1:])) / U[i][i]

    return x

# Contoh penggunaan
A = np.array([[2, -1, 1],
              [1, 3, 2],
              [1, 1, 3]])

b = np.array([3, 8, 5])

L, U = dekomposisi_LU(A)
y = substitusi_maju(L, b)
x = substitusi_mundur(U, y)

print("Matriks L:")
print(L)
print("\nMatriks U:")
print(U)
print("\nNilai y:")
print(y)
print("\nNilai x:")
print(x)
